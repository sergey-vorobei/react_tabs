{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","find","id","content","className","map","tab","title","href","onClick","onSelect","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAcaA,EAAwB,SAAC,GAMhC,IAJFC,EAIC,EAJDA,KACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,cAGIC,EAAaH,EAAKI,MAAK,qBAAGC,KAAgBJ,MAAkBD,EAAK,GAC/DM,EAAYH,EAAZG,QAOR,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAC,GAAG,OACX,oBAEEF,UAAWJ,EAAWE,KAAOI,EAAIJ,GAAK,YAAc,GACpD,UAAQ,MAHV,SAKE,mBACEA,GAAII,EAAIJ,GACRK,MAAOD,EAAIC,MACXC,KAAI,WAAMF,EAAIJ,IACd,UAAQ,UACRO,QAAS,kBArBN,SAACH,GACZR,IAAkBQ,EAAIJ,IACxBH,EAAcO,GAmBWI,CAASJ,IAL1B,SAOGA,EAAIC,SAXFD,EAAIJ,WAkBjB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGD,QChDIN,EAAO,CAClB,CAAEK,GAAI,QAASK,MAAO,QAASJ,QAAS,eACxC,CAAED,GAAI,QAASK,MAAO,QAASJ,QAAS,eACxC,CAAED,GAAI,QAASK,MAAO,QAASJ,QAAS,gBAS7BQ,EAAgB,WAC3B,MAA0CC,mBAAiBf,EAAK,GAAGK,IAAnE,mBAAOJ,EAAP,KAAsBe,EAAtB,KAGQN,GAFWV,EAAKI,MAAK,qBAAGC,KAAgBJ,MAC7CD,EAAK,IACAU,MAMR,OACE,sBAAKH,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAG,KAGH,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAeA,EACfC,cAfgB,SAACO,GACrBO,EAAiBP,EAAIJ,WCtBzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e431e702.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void,\n  selectedTabId: string,\n};\n\nexport const Tabs: React.FC<Props> = (\n  {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  },\n) => {\n  const currentTab = tabs.find(({ id }) => id === selectedTabId) || tabs[0];\n  const { content } = currentTab;\n  const onSelect = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={currentTab.id === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                id={tab.id}\n                title={tab.title}\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => onSelect(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState<string>(tabs[0].id);\n  const currentTab = tabs.find(({ id }) => id === selectedTabId)\n  || tabs[0];\n  const { title } = currentTab;\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}