{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","content","filter","id","className","map","tab","title","href","onClick","onSelect","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAcaA,EAAwB,SAAC,GAMhC,IAJFC,EAIC,EAJDA,KACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,cAIMC,EADWH,EAAKI,QAAO,qBAAGC,KAAgBJ,KAAe,GACzDE,QAQR,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKG,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAC,GAAG,OACX,oBAEEF,UAAWL,IAAkBO,EAAIH,GAAK,YAAc,GACpD,UAAQ,MAHV,SAKE,mBACEA,GAAIG,EAAIH,GACRI,MAAOD,EAAIC,MACXC,KAAI,WAAMF,EAAIH,IACd,UAAQ,UACRM,QAAS,kBArBN,SAACH,GACZP,IAAkBO,EAAIH,IACxBH,EAAcM,GAmBWI,CAASJ,IAL1B,SAOGA,EAAIC,SAXFD,EAAIH,WAkBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGH,QCjDIH,EAAO,CAClB,CAAEK,GAAI,QAASI,MAAO,QAASN,QAAS,eACxC,CAAEE,GAAI,QAASI,MAAO,QAASN,QAAS,eACxC,CAAEE,GAAI,QAASI,MAAO,QAASN,QAAS,gBAS7BU,EAAgB,WAC3B,MAA0CC,mBAAiBd,EAAK,GAAGK,IAAnE,mBAAOJ,EAAP,KAAsBc,EAAtB,KAGQN,GAFWT,EAAKI,QAAO,qBAAGC,KAAgBJ,KAAe,IAC9DD,EAAK,IACAS,MAMR,OACE,sBAAKH,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAG,KAGH,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeA,EACfC,cAfgB,SAACM,GACrBO,EAAiBP,EAAIH,WCtBzBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.419abfbb.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void,\n  selectedTabId: string,\n};\n\nexport const Tabs: React.FC<Props> = (\n  {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  },\n) => {\n  const currentTab = tabs.filter(({ id }) => id === selectedTabId)[0];\n  const { content } = currentTab;\n\n  const onSelect = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={selectedTabId === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                id={tab.id}\n                title={tab.title}\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => onSelect(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState<string>(tabs[0].id);\n  const currentTub = tabs.filter(({ id }) => id === selectedTabId)[0]\n  || tabs[0];\n  const { title } = currentTub;\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}